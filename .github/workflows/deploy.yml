name: Deploy to Production

on:
  push:
    branches: [ main ]  # 当推送到main分支时触发

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          port: ${{ secrets.PORT }}
          key: ${{ secrets.DEPLOY_KEY }}
          script: |
            # 确保目录存在
            mkdir -p /var/www/gardening-club
            
            # 创建或更新部署脚本
            cat > /var/www/gardening-club/deploy.sh << 'EOL'
            #!/bin/bash

            # 设置变量
            APP_DIR="/var/www/gardening-club"
            GIT_REPO="https://github.com/jerryjiang063/club-signin-system.git"
            BRANCH="main"

            # 输出时间戳
            echo "==============================================="
            echo "Deployment started at $(date)"
            echo "==============================================="

            # 检查目录是否为空或不存在Git仓库
            if [ ! -d "$APP_DIR/.git" ]; then
                echo "Git repository not found, cloning..."
                # 如果目录不为空，先备份
                if [ "$(ls -A $APP_DIR)" ]; then
                    echo "Directory not empty, backing up..."
                    BACKUP_DIR="${APP_DIR}_backup_$(date +%Y%m%d%H%M%S)"
                    mv $APP_DIR $BACKUP_DIR
                    mkdir -p $APP_DIR
                fi
                # 克隆仓库
                git clone -b $BRANCH $GIT_REPO $APP_DIR
                cd $APP_DIR
            else
                echo "Updating repository..."
                cd $APP_DIR
                git fetch --all
                git reset --hard origin/$BRANCH
                git pull origin $BRANCH
            fi

            # 检查package.json是否存在
            if [ ! -f "$APP_DIR/package.json" ]; then
                echo "Error: package.json not found!"
                echo "Current directory: $(pwd)"
                echo "Directory contents:"
                ls -la
                echo "==============================================="
                echo "Deployment failed at $(date)"
                echo "==============================================="
                exit 1
            fi

            # 安装依赖
            echo "Installing dependencies..."
            npm install

            # 构建应用
            echo "Building application..."
            npm run build

            # 设置环境变量文件
            if [ ! -f "$APP_DIR/.env.local" ]; then
                echo "Creating .env.local file..."
                cat > "$APP_DIR/.env.local" << ENVFILE
            # 数据库连接
            DATABASE_URL="file:./prisma/dev.db"

            # NextAuth配置
            NEXTAUTH_URL="https://your-domain.com"
            NEXTAUTH_SECRET="your-secret-key-here"

            # 其他环境变量
            # ...
            ENVFILE
                echo "Please update the .env.local file with your actual configuration."
            fi

            # 使用PM2重启应用
            echo "Restarting application with PM2..."
            if pm2 list | grep -q "gardening-club"; then
                pm2 reload gardening-club
            else
                pm2 start npm --name "gardening-club" -- start
            fi

            echo "==============================================="
            echo "Deployment completed at $(date)"
            echo "==============================================="
            EOL
            
            # 给脚本添加执行权限
            chmod +x /var/www/gardening-club/deploy.sh
            
            # 执行部署脚本
            cd /var/www/gardening-club
            ./deploy.sh
